import{j as e,g as d,r as l}from"./index-DI4YjuMi.js";import{V as m}from"./VerifyLogin-BqNIoF9n.js";import{H as h,P as u,F as g}from"./PageContent-C41VlbH4.js";const x=()=>e.jsx("div",{children:"DashboardPageContent"}),b=async o=>{const s=new FormData;s.append("file",o);const t=await fetch(`${d}api/v1/files/upload`,{method:"PUT",body:s}),r=await t.json();return{status:t.status,data:r}},j=async o=>{const s=`${d}api/v1/files/${encodeURIComponent(o)}`;console.log(s);const t=await fetch(s,{method:"GET"});if(console.log(t),!t.ok)throw new Error(`Failed to fetch file: ${t.statusText}`);return t.blob()},P=()=>{const[o,s]=l.useState(null),[t,r]=l.useState(null);document.title="Dashboard";const f=n=>{s(n.target.files[0])};return l.useEffect(()=>{const n=async()=>{try{if((await b(o)).status==200){const p=o.name,a=await j(p);if(!(a instanceof Blob))throw new Error("APIGetFile did not return a valid Blob");if(!a.type.startsWith("image/"))throw new Error(`Invalid Blob type: ${a.type}`);console.log("Blob:",a,"Type:",a.type);const c=URL.createObjectURL(a);r(c),console.log("Image URL:",c)}}catch(i){console.error("Upload or fetch failed:",i)}};o!=null&&n()},[o]),e.jsx(m,{children:e.jsxs("div",{className:"bg-gradient-to-b from-dark-teal from-20% to-mid-teal bg-fixed min-h-screen top-0 flex flex-col",children:[e.jsxs("div",{className:"pt-[5rem] lg:pt-[8rem] f-1",children:[e.jsx(h,{}),e.jsxs(u,{children:[e.jsx(x,{}),e.jsx("input",{type:"file",onChange:f}),e.jsx("button",{type:"submit",children:"Upload"}),t&&e.jsx("img",{src:t,className:"w-[150px]",alt:"Uploaded Preview"})]})]}),e.jsx(g,{})]})})};export{P as default};
