import{M as r}from"./index-jfVTkSr8.js";const c=async(s,e)=>{const t=new FormData;for(const o of e)t.append("files",o);const n=await fetch(`${r}api/v1/files/upload`,{method:"PUT",headers:{Authorization:`Bearer ${s}`},body:t}),a=await n.json();return{status:n.status,data:a}},l=async s=>{const e=`${r}api/v1/files/${encodeURIComponent(s)}`;console.log(e);const t=await fetch(e,{method:"GET"});if(console.log(t),!t.ok)throw new Error(`Failed to fetch file: ${t.statusText}`);return t.blob()},y=async(s,e,t,n)=>{const a=`query {getMediaFiles(offset: ${e}, type: "${t}", search: "${n}") { files { id filename mimetype encoding url date attachment_metadata author { id user_login user_nicename user_email user_url user_registered user_activation_key user_status display_name first_name last_name } } total } }`,o=`${r}graphql`,i=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({query:a})}),u=await i.json();return{status:i.status,data:u.data}},p=async(s,e)=>{const t=`query {getMediaFileById(id: ${e}) { id filename mimetype encoding url date attachment_metadata author { id user_login user_nicename user_email user_url user_registered user_activation_key user_status display_name first_name last_name } } }`,n=`${r}graphql`,a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({query:t})}),o=await a.json();return{status:a.status,data:o.data}},h=async(s,e)=>{const t=`mutation {deleteFiles(ids: ${JSON.stringify(e)}) { success error } }`,n=`${r}graphql`,a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({query:t})}),o=await a.json();return{status:a.status,data:o.data}},m=async s=>{const e="query {getMediaSettings { settings } }",t=`${r}graphql`,n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({query:e})}),a=await n.json();return{status:n.status,data:a.data}},f=async(s,e)=>{const t=`mutation {updateMediaSettings(data: ${JSON.stringify(e)}) { success error } }`,n=`${r}graphql`,a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({query:t})}),o=await a.json();return{status:a.status,data:o.data}};export{h as A,y as a,c as b,l as c,m as d,f as e,p as f};
