import{j as e,g as i,r as n}from"./index-DxbVn8xo.js";import{V as p}from"./VerifyLogin-Cn-p4mSn.js";import{H as h,P as u,F as g}from"./PageContent-DB3HgbOg.js";const x=()=>e.jsx("div",{children:"DashboardPageContent"}),b=async t=>{const o=new FormData;o.append("file",t),fetch(`${i}api/v1/files/upload`,{method:"PUT",body:o})},j=async t=>{const o=await fetch(`${i}api/v1/files/${encodeURIComponent(t)}`,{method:"GET"});if(!o.ok)throw new Error(`Failed to fetch file: ${o.statusText}`);return o.blob()},P=()=>{const[t,o]=n.useState(null),[l,c]=n.useState(null);document.title="Dashboard";const d=s=>{o(s.target.files[0])};return n.useEffect(()=>{const s=async()=>{try{const r=await b(t);console.log("result"),console.log(r);const f=t.name,a=await j(f);if(!(a instanceof Blob))throw new Error("APIGetFile did not return a valid Blob");if(!a.type.startsWith("image/"))throw new Error(`Invalid Blob type: ${a.type}`);const m=URL.createObjectURL(a);c(m)}catch(r){console.error("Upload or fetch failed:",r)}};t!=null&&s()},[t]),e.jsx(p,{children:e.jsxs("div",{className:"bg-gradient-to-b from-dark-teal from-20% to-mid-teal bg-fixed min-h-screen top-0 flex flex-col",children:[e.jsxs("div",{className:"pt-[5rem] lg:pt-[8rem] f-1",children:[e.jsx(h,{}),e.jsxs(u,{children:[e.jsx(x,{}),e.jsx("input",{type:"file",onChange:d}),e.jsx("button",{type:"submit",children:"Upload"}),l&&e.jsx("img",{src:l,className:"w-[150px]",alt:"Uploaded Preview"})]})]}),e.jsx(g,{})]})})};export{P as default};
